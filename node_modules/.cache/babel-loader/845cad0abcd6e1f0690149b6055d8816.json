{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkInstance = void 0;\n\nconst ColorUtils_1 = require(\"../../../Utils/ColorUtils\");\n\nconst CanvasUtils_1 = require(\"../../../Utils/CanvasUtils\");\n\nconst NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\n\nclass LinkInstance {\n  constructor(container) {\n    this.container = container;\n  }\n\n  particleCreated(particle) {\n    const linkParticle = particle;\n    linkParticle.links = [];\n  }\n\n  particleDestroyed(particle) {\n    const linkParticle = particle;\n    linkParticle.links = [];\n  }\n\n  drawParticle(context, particle) {\n    const linkParticle = particle,\n          container = this.container,\n          particles = container.particles,\n          pOptions = particle.options;\n\n    if (linkParticle.links.length <= 0) {\n      return;\n    }\n\n    context.save();\n    const p1Links = linkParticle.links.filter(l => {\n      const linkFreq = container.particles.getLinkFrequency(linkParticle, l.destination);\n      return linkFreq <= pOptions.links.frequency;\n    });\n\n    for (const link of p1Links) {\n      const p2 = link.destination;\n\n      if (pOptions.links.triangles.enable) {\n        const links = p1Links.map(l => l.destination),\n              vertices = p2.links.filter(t => {\n          const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n          return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n        });\n\n        if (vertices.length) {\n          for (const vertex of vertices) {\n            const p3 = vertex.destination,\n                  triangleFreq = particles.getTriangleFrequency(linkParticle, p2, p3);\n\n            if (triangleFreq > pOptions.links.triangles.frequency) {\n              continue;\n            }\n\n            this.drawLinkTriangle(linkParticle, link, vertex);\n          }\n        }\n      }\n\n      if (link.opacity > 0 && container.retina.linksWidth > 0) {\n        this.drawLinkLine(linkParticle, link);\n      }\n    }\n\n    context.restore();\n  }\n\n  drawLinkTriangle(p1, link1, link2) {\n    var _a;\n\n    const container = this.container,\n          options = container.actualOptions,\n          p2 = link1.destination,\n          p3 = link2.destination,\n          triangleOptions = p1.options.links.triangles,\n          opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n\n    if (opacityTriangle <= 0) {\n      return;\n    }\n\n    const pos1 = p1.getPosition(),\n          pos2 = p2.getPosition(),\n          pos3 = p3.getPosition();\n    container.canvas.draw(ctx => {\n      if ((0, NumberUtils_1.getDistance)(pos1, pos2) > container.retina.linksDistance || (0, NumberUtils_1.getDistance)(pos3, pos2) > container.retina.linksDistance || (0, NumberUtils_1.getDistance)(pos3, pos1) > container.retina.linksDistance) {\n        return;\n      }\n\n      let colorTriangle = (0, ColorUtils_1.colorToRgb)(triangleOptions.color);\n\n      if (!colorTriangle) {\n        const linksOptions = p1.options.links,\n              linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorTriangle = (0, ColorUtils_1.getLinkColor)(p1, p2, linkColor);\n      }\n\n      if (!colorTriangle) {\n        return;\n      }\n\n      (0, CanvasUtils_1.drawLinkTriangle)(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n    });\n  }\n\n  drawLinkLine(p1, link) {\n    const container = this.container,\n          options = container.actualOptions,\n          p2 = link.destination,\n          pos1 = p1.getPosition(),\n          pos2 = p2.getPosition();\n    let opacity = link.opacity;\n    container.canvas.draw(ctx => {\n      var _a, _b;\n\n      let colorLine;\n      const twinkle = p1.options.twinkle.lines;\n\n      if (twinkle.enable) {\n        const twinkleFreq = twinkle.frequency,\n              twinkleRgb = (0, ColorUtils_1.colorToRgb)(twinkle.color),\n              twinkling = Math.random() < twinkleFreq;\n\n        if (twinkling && twinkleRgb) {\n          colorLine = twinkleRgb;\n          opacity = (0, NumberUtils_1.getRangeValue)(twinkle.opacity);\n        }\n      }\n\n      if (!colorLine) {\n        const linksOptions = p1.options.links,\n              linkColor = linksOptions.id !== undefined ? container.particles.linksColors.get(linksOptions.id) : container.particles.linksColor;\n        colorLine = (0, ColorUtils_1.getLinkColor)(p1, p2, linkColor);\n      }\n\n      if (!colorLine) {\n        return;\n      }\n\n      const width = (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth,\n            maxDistance = (_b = p1.retina.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n      (0, CanvasUtils_1.drawLinkLine)(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n    });\n  }\n\n}\n\nexports.LinkInstance = LinkInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","LinkInstance","ColorUtils_1","require","CanvasUtils_1","NumberUtils_1","constructor","container","particleCreated","particle","linkParticle","links","particleDestroyed","drawParticle","context","particles","pOptions","options","length","save","p1Links","filter","l","linkFreq","getLinkFrequency","destination","frequency","link","p2","triangles","enable","map","vertices","t","indexOf","vertex","p3","triangleFreq","getTriangleFrequency","drawLinkTriangle","opacity","retina","linksWidth","drawLinkLine","restore","p1","link1","link2","_a","actualOptions","triangleOptions","opacityTriangle","pos1","getPosition","pos2","pos3","canvas","draw","ctx","getDistance","linksDistance","colorTriangle","colorToRgb","color","linksOptions","linkColor","id","undefined","linksColors","get","linksColor","getLinkColor","backgroundMask","composite","_b","colorLine","twinkle","lines","twinkleFreq","twinkleRgb","twinkling","Math","random","getRangeValue","width","maxDistance","size","warp","shadow"],"sources":["/media/beni/Work3/git/github/site2022/node_modules/tsparticles/cjs/Interactions/Particles/Links/LinkInstance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkInstance = void 0;\nconst ColorUtils_1 = require(\"../../../Utils/ColorUtils\");\nconst CanvasUtils_1 = require(\"../../../Utils/CanvasUtils\");\nconst NumberUtils_1 = require(\"../../../Utils/NumberUtils\");\nclass LinkInstance {\n    constructor(container) {\n        this.container = container;\n    }\n    particleCreated(particle) {\n        const linkParticle = particle;\n        linkParticle.links = [];\n    }\n    particleDestroyed(particle) {\n        const linkParticle = particle;\n        linkParticle.links = [];\n    }\n    drawParticle(context, particle) {\n        const linkParticle = particle, container = this.container, particles = container.particles, pOptions = particle.options;\n        if (linkParticle.links.length <= 0) {\n            return;\n        }\n        context.save();\n        const p1Links = linkParticle.links.filter((l) => {\n            const linkFreq = container.particles.getLinkFrequency(linkParticle, l.destination);\n            return linkFreq <= pOptions.links.frequency;\n        });\n        for (const link of p1Links) {\n            const p2 = link.destination;\n            if (pOptions.links.triangles.enable) {\n                const links = p1Links.map((l) => l.destination), vertices = p2.links.filter((t) => {\n                    const linkFreq = container.particles.getLinkFrequency(p2, t.destination);\n                    return linkFreq <= p2.options.links.frequency && links.indexOf(t.destination) >= 0;\n                });\n                if (vertices.length) {\n                    for (const vertex of vertices) {\n                        const p3 = vertex.destination, triangleFreq = particles.getTriangleFrequency(linkParticle, p2, p3);\n                        if (triangleFreq > pOptions.links.triangles.frequency) {\n                            continue;\n                        }\n                        this.drawLinkTriangle(linkParticle, link, vertex);\n                    }\n                }\n            }\n            if (link.opacity > 0 && container.retina.linksWidth > 0) {\n                this.drawLinkLine(linkParticle, link);\n            }\n        }\n        context.restore();\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, triangleOptions = p1.options.links.triangles, opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition();\n        container.canvas.draw((ctx) => {\n            if ((0, NumberUtils_1.getDistance)(pos1, pos2) > container.retina.linksDistance ||\n                (0, NumberUtils_1.getDistance)(pos3, pos2) > container.retina.linksDistance ||\n                (0, NumberUtils_1.getDistance)(pos3, pos1) > container.retina.linksDistance) {\n                return;\n            }\n            let colorTriangle = (0, ColorUtils_1.colorToRgb)(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links, linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = (0, ColorUtils_1.getLinkColor)(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            (0, CanvasUtils_1.drawLinkTriangle)(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        let opacity = link.opacity;\n        container.canvas.draw((ctx) => {\n            var _a, _b;\n            let colorLine;\n            const twinkle = p1.options.twinkle.lines;\n            if (twinkle.enable) {\n                const twinkleFreq = twinkle.frequency, twinkleRgb = (0, ColorUtils_1.colorToRgb)(twinkle.color), twinkling = Math.random() < twinkleFreq;\n                if (twinkling && twinkleRgb) {\n                    colorLine = twinkleRgb;\n                    opacity = (0, NumberUtils_1.getRangeValue)(twinkle.opacity);\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links, linkColor = linksOptions.id !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = (0, ColorUtils_1.getLinkColor)(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : container.retina.linksWidth, maxDistance = (_b = p1.retina.linksDistance) !== null && _b !== void 0 ? _b : container.retina.linksDistance;\n            (0, CanvasUtils_1.drawLinkLine)(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n}\nexports.LinkInstance = LinkInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}