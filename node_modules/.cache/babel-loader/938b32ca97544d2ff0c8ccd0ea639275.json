{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AngleUpdater = void 0;\n\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\n\nfunction updateAngle(particle, delta) {\n  var _a;\n\n  const rotate = particle.rotate;\n\n  if (!rotate) {\n    return;\n  }\n\n  const rotateOptions = particle.options.rotate;\n  const rotateAnimation = rotateOptions.animation;\n  const speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n  const max = 2 * Math.PI;\n\n  if (!rotateAnimation.enable) {\n    return;\n  }\n\n  switch (rotate.status) {\n    case 0:\n      rotate.value += speed;\n\n      if (rotate.value > max) {\n        rotate.value -= max;\n      }\n\n      break;\n\n    case 1:\n    default:\n      rotate.value -= speed;\n\n      if (rotate.value < 0) {\n        rotate.value += max;\n      }\n\n      break;\n  }\n}\n\nclass AngleUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init(particle) {\n    const rotateOptions = particle.options.rotate;\n    particle.rotate = {\n      enable: rotateOptions.animation.enable,\n      value: (0, NumberUtils_1.getRangeValue)(rotateOptions.value) * Math.PI / 180\n    };\n    let rotateDirection = rotateOptions.direction;\n\n    if (rotateDirection === \"random\") {\n      const index = Math.floor(Math.random() * 2);\n      rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n    }\n\n    switch (rotateDirection) {\n      case \"counter-clockwise\":\n      case \"counterClockwise\":\n        particle.rotate.status = 1;\n        break;\n\n      case \"clockwise\":\n        particle.rotate.status = 0;\n        break;\n    }\n\n    const rotateAnimation = particle.options.rotate.animation;\n\n    if (rotateAnimation.enable) {\n      particle.rotate.velocity = (0, NumberUtils_1.getRangeValue)(rotateAnimation.speed) / 360 * this.container.retina.reduceFactor;\n\n      if (!rotateAnimation.sync) {\n        particle.rotate.velocity *= Math.random();\n      }\n    }\n  }\n\n  isEnabled(particle) {\n    const rotate = particle.options.rotate;\n    const rotateAnimation = rotate.animation;\n    return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    updateAngle(particle, delta);\n  }\n\n}\n\nexports.AngleUpdater = AngleUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","AngleUpdater","NumberUtils_1","require","updateAngle","particle","delta","_a","rotate","rotateOptions","options","rotateAnimation","animation","speed","velocity","factor","max","Math","PI","enable","status","constructor","container","init","getRangeValue","rotateDirection","direction","index","floor","random","retina","reduceFactor","sync","isEnabled","destroyed","spawning","path","update"],"sources":["/media/beni/Work3/git/github/site2022/node_modules/tsparticles/cjs/Updaters/Angle/AngleUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AngleUpdater = void 0;\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nfunction updateAngle(particle, delta) {\n    var _a;\n    const rotate = particle.rotate;\n    if (!rotate) {\n        return;\n    }\n    const rotateOptions = particle.options.rotate;\n    const rotateAnimation = rotateOptions.animation;\n    const speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n    const max = 2 * Math.PI;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case 0:\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n}\nclass AngleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: ((0, NumberUtils_1.getRangeValue)(rotateOptions.value) * Math.PI) / 180,\n        };\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(Math.random() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = 1;\n                break;\n            case \"clockwise\":\n                particle.rotate.status = 0;\n                break;\n        }\n        const rotateAnimation = particle.options.rotate.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.velocity =\n                ((0, NumberUtils_1.getRangeValue)(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        const rotateAnimation = rotate.animation;\n        return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n    }\n}\nexports.AngleUpdater = AngleUpdater;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,MAAMC,aAAa,GAAGC,OAAO,CAAC,yBAAD,CAA7B;;AACA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,KAA/B,EAAsC;EAClC,IAAIC,EAAJ;;EACA,MAAMC,MAAM,GAAGH,QAAQ,CAACG,MAAxB;;EACA,IAAI,CAACA,MAAL,EAAa;IACT;EACH;;EACD,MAAMC,aAAa,GAAGJ,QAAQ,CAACK,OAAT,CAAiBF,MAAvC;EACA,MAAMG,eAAe,GAAGF,aAAa,CAACG,SAAtC;EACA,MAAMC,KAAK,GAAG,CAAC,CAACN,EAAE,GAAGC,MAAM,CAACM,QAAb,MAA2B,IAA3B,IAAmCP,EAAE,KAAK,KAAK,CAA/C,GAAmDA,EAAnD,GAAwD,CAAzD,IAA8DD,KAAK,CAACS,MAAlF;EACA,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAACC,EAArB;;EACA,IAAI,CAACP,eAAe,CAACQ,MAArB,EAA6B;IACzB;EACH;;EACD,QAAQX,MAAM,CAACY,MAAf;IACI,KAAK,CAAL;MACIZ,MAAM,CAACR,KAAP,IAAgBa,KAAhB;;MACA,IAAIL,MAAM,CAACR,KAAP,GAAegB,GAAnB,EAAwB;QACpBR,MAAM,CAACR,KAAP,IAAgBgB,GAAhB;MACH;;MACD;;IACJ,KAAK,CAAL;IACA;MACIR,MAAM,CAACR,KAAP,IAAgBa,KAAhB;;MACA,IAAIL,MAAM,CAACR,KAAP,GAAe,CAAnB,EAAsB;QAClBQ,MAAM,CAACR,KAAP,IAAgBgB,GAAhB;MACH;;MACD;EAbR;AAeH;;AACD,MAAMf,YAAN,CAAmB;EACfoB,WAAW,CAACC,SAAD,EAAY;IACnB,KAAKA,SAAL,GAAiBA,SAAjB;EACH;;EACDC,IAAI,CAAClB,QAAD,EAAW;IACX,MAAMI,aAAa,GAAGJ,QAAQ,CAACK,OAAT,CAAiBF,MAAvC;IACAH,QAAQ,CAACG,MAAT,GAAkB;MACdW,MAAM,EAAEV,aAAa,CAACG,SAAd,CAAwBO,MADlB;MAEdnB,KAAK,EAAG,CAAC,GAAGE,aAAa,CAACsB,aAAlB,EAAiCf,aAAa,CAACT,KAA/C,IAAwDiB,IAAI,CAACC,EAA9D,GAAoE;IAF7D,CAAlB;IAIA,IAAIO,eAAe,GAAGhB,aAAa,CAACiB,SAApC;;IACA,IAAID,eAAe,KAAK,QAAxB,EAAkC;MAC9B,MAAME,KAAK,GAAGV,IAAI,CAACW,KAAL,CAAWX,IAAI,CAACY,MAAL,KAAgB,CAA3B,CAAd;MACAJ,eAAe,GAAGE,KAAK,GAAG,CAAR,GAAY,mBAAZ,GAAkC,WAApD;IACH;;IACD,QAAQF,eAAR;MACI,KAAK,mBAAL;MACA,KAAK,kBAAL;QACIpB,QAAQ,CAACG,MAAT,CAAgBY,MAAhB,GAAyB,CAAzB;QACA;;MACJ,KAAK,WAAL;QACIf,QAAQ,CAACG,MAAT,CAAgBY,MAAhB,GAAyB,CAAzB;QACA;IAPR;;IASA,MAAMT,eAAe,GAAGN,QAAQ,CAACK,OAAT,CAAiBF,MAAjB,CAAwBI,SAAhD;;IACA,IAAID,eAAe,CAACQ,MAApB,EAA4B;MACxBd,QAAQ,CAACG,MAAT,CAAgBM,QAAhB,GACK,CAAC,GAAGZ,aAAa,CAACsB,aAAlB,EAAiCb,eAAe,CAACE,KAAjD,IAA0D,GAA3D,GAAkE,KAAKS,SAAL,CAAeQ,MAAf,CAAsBC,YAD5F;;MAEA,IAAI,CAACpB,eAAe,CAACqB,IAArB,EAA2B;QACvB3B,QAAQ,CAACG,MAAT,CAAgBM,QAAhB,IAA4BG,IAAI,CAACY,MAAL,EAA5B;MACH;IACJ;EACJ;;EACDI,SAAS,CAAC5B,QAAD,EAAW;IAChB,MAAMG,MAAM,GAAGH,QAAQ,CAACK,OAAT,CAAiBF,MAAhC;IACA,MAAMG,eAAe,GAAGH,MAAM,CAACI,SAA/B;IACA,OAAO,CAACP,QAAQ,CAAC6B,SAAV,IAAuB,CAAC7B,QAAQ,CAAC8B,QAAjC,IAA6C,CAAC3B,MAAM,CAAC4B,IAArD,IAA6DzB,eAAe,CAACQ,MAApF;EACH;;EACDkB,MAAM,CAAChC,QAAD,EAAWC,KAAX,EAAkB;IACpB,IAAI,CAAC,KAAK2B,SAAL,CAAe5B,QAAf,CAAL,EAA+B;MAC3B;IACH;;IACDD,WAAW,CAACC,QAAD,EAAWC,KAAX,CAAX;EACH;;AA3Cc;;AA6CnBP,OAAO,CAACE,YAAR,GAAuBA,YAAvB"},"metadata":{},"sourceType":"script"}