{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbsorberInstance = void 0;\n\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\n\nconst ColorUtils_1 = require(\"../../Utils/ColorUtils\");\n\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\n\nconst Vector_1 = require(\"../../Core/Utils/Vector\");\n\nconst Utils_1 = require(\"../../Utils/Utils\");\n\nclass AbsorberInstance {\n  constructor(absorbers, container, options, position) {\n    var _a, _b, _c;\n\n    this.absorbers = absorbers;\n    this.container = container;\n    this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n\n    if (options instanceof Absorber_1.Absorber) {\n      this.options = options;\n    } else {\n      this.options = new Absorber_1.Absorber();\n      this.options.load(options);\n    }\n\n    this.dragging = false;\n    this.name = this.options.name;\n    this.opacity = this.options.opacity;\n    this.size = (0, NumberUtils_1.getRangeValue)(this.options.size.value) * container.retina.pixelRatio;\n    this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n    const limit = this.options.size.limit;\n    this.limit = {\n      radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n      mass: limit.mass\n    };\n    this.color = (_a = (0, ColorUtils_1.colorToRgb)(this.options.color)) !== null && _a !== void 0 ? _a : {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n  }\n\n  attract(particle) {\n    const container = this.container,\n          options = this.options;\n\n    if (options.draggable) {\n      const mouse = container.interactivity.mouse;\n\n      if (mouse.clicking && mouse.downPosition) {\n        const mouseDist = (0, NumberUtils_1.getDistance)(this.position, mouse.downPosition);\n\n        if (mouseDist <= this.size) {\n          this.dragging = true;\n        }\n      } else {\n        this.dragging = false;\n      }\n\n      if (this.dragging && mouse.position) {\n        this.position.x = mouse.position.x;\n        this.position.y = mouse.position.y;\n      }\n    }\n\n    const pos = particle.getPosition(),\n          {\n      dx,\n      dy,\n      distance\n    } = (0, NumberUtils_1.getDistances)(this.position, pos),\n          v = Vector_1.Vector.create(dx, dy);\n    v.length = this.mass / Math.pow(distance, 2) * container.retina.reduceFactor;\n\n    if (distance < this.size + particle.getRadius()) {\n      const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n\n      if (this.size > particle.getRadius() && distance < this.size - particle.getRadius() || particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0) {\n        if (options.destroy) {\n          particle.destroy();\n        } else {\n          particle.needsNewPosition = true;\n          this.updateParticlePosition(particle, v);\n        }\n      } else {\n        if (options.destroy) {\n          particle.size.value -= sizeFactor;\n        }\n\n        this.updateParticlePosition(particle, v);\n      }\n\n      if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n        this.size += sizeFactor;\n      }\n\n      if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n        this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n      }\n    } else {\n      this.updateParticlePosition(particle, v);\n    }\n  }\n\n  resize() {\n    const initialPosition = this.initialPosition;\n    this.position = initialPosition && (0, Utils_1.isPointInside)(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n  }\n\n  draw(context) {\n    context.translate(this.position.x, this.position.y);\n    context.beginPath();\n    context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n    context.closePath();\n    context.fillStyle = (0, ColorUtils_1.getStyleFromRgb)(this.color, this.opacity);\n    context.fill();\n  }\n\n  calcPosition() {\n    const exactPosition = (0, NumberUtils_1.calcPositionOrRandomFromSizeRanged)({\n      size: this.container.canvas.size,\n      position: this.options.position\n    });\n    return Vector_1.Vector.create(exactPosition.x, exactPosition.y);\n  }\n\n  updateParticlePosition(particle, v) {\n    var _a;\n\n    if (particle.destroyed) {\n      return;\n    }\n\n    const container = this.container,\n          canvasSize = container.canvas.size;\n\n    if (particle.needsNewPosition) {\n      const newPosition = (0, NumberUtils_1.calcPositionOrRandomFromSize)({\n        size: canvasSize\n      });\n      particle.position.setTo(newPosition);\n      particle.velocity.setTo(particle.initialVelocity);\n      particle.absorberOrbit = undefined;\n      particle.needsNewPosition = false;\n    }\n\n    if (this.options.orbits) {\n      if (particle.absorberOrbit === undefined) {\n        particle.absorberOrbit = Vector_1.Vector.create(0, 0);\n        particle.absorberOrbit.length = (0, NumberUtils_1.getDistance)(particle.getPosition(), this.position);\n        particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n      }\n\n      if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n        const minSize = Math.min(canvasSize.width, canvasSize.height);\n        particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n      }\n\n      if (particle.absorberOrbitDirection === undefined) {\n        particle.absorberOrbitDirection = particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n      }\n\n      const orbitRadius = particle.absorberOrbit.length,\n            orbitAngle = particle.absorberOrbit.angle,\n            orbitDirection = particle.absorberOrbitDirection;\n      particle.velocity.setTo(Vector_1.Vector.origin);\n      const updateFunc = {\n        x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n        y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos\n      };\n      particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n      particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n      particle.absorberOrbit.length -= v.length;\n      particle.absorberOrbit.angle += ((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio / 100 * container.retina.reduceFactor;\n    } else {\n      const addV = Vector_1.Vector.origin;\n      addV.length = v.length;\n      addV.angle = v.angle;\n      particle.velocity.addTo(addV);\n    }\n  }\n\n}\n\nexports.AbsorberInstance = AbsorberInstance;","map":{"version":3,"names":["Object","defineProperty","exports","value","AbsorberInstance","NumberUtils_1","require","ColorUtils_1","Absorber_1","Vector_1","Utils_1","constructor","absorbers","container","options","position","_a","_b","_c","initialPosition","Vector","create","x","y","undefined","Absorber","load","dragging","name","opacity","size","getRangeValue","retina","pixelRatio","mass","density","reduceFactor","limit","radius","color","colorToRgb","b","g","r","copy","calcPosition","attract","particle","draggable","mouse","interactivity","clicking","downPosition","mouseDist","getDistance","pos","getPosition","dx","dy","distance","getDistances","v","length","Math","pow","getRadius","sizeFactor","absorberOrbit","destroy","needsNewPosition","updateParticlePosition","resize","isPointInside","canvas","draw","context","translate","beginPath","arc","PI","closePath","fillStyle","getStyleFromRgb","fill","exactPosition","calcPositionOrRandomFromSizeRanged","destroyed","canvasSize","newPosition","calcPositionOrRandomFromSize","setTo","velocity","initialVelocity","orbits","angle","random","minSize","min","width","height","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","origin","updateFunc","cos","sin","moveSpeed","addV","addTo"],"sources":["/media/beni/Work3/git/github/site2022/node_modules/tsparticles/cjs/Plugins/Absorbers/AbsorberInstance.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nconst NumberUtils_1 = require(\"../../Utils/NumberUtils\");\nconst ColorUtils_1 = require(\"../../Utils/ColorUtils\");\nconst Absorber_1 = require(\"./Options/Classes/Absorber\");\nconst Vector_1 = require(\"../../Core/Utils/Vector\");\nconst Utils_1 = require(\"../../Utils/Utils\");\nclass AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector_1.Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber_1.Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber_1.Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = (0, NumberUtils_1.getRangeValue)(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = (0, ColorUtils_1.colorToRgb)(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = (0, NumberUtils_1.getDistance)(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = (0, NumberUtils_1.getDistances)(this.position, pos), v = Vector_1.Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && (0, Utils_1.isPointInside)(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = (0, ColorUtils_1.getStyleFromRgb)(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        const exactPosition = (0, NumberUtils_1.calcPositionOrRandomFromSizeRanged)({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n        return Vector_1.Vector.create(exactPosition.x, exactPosition.y);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container, canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const newPosition = (0, NumberUtils_1.calcPositionOrRandomFromSize)({ size: canvasSize });\n            particle.position.setTo(newPosition);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector_1.Vector.create(0, 0);\n                particle.absorberOrbit.length = (0, NumberUtils_1.getDistance)(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = Math.random() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (Math.random() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.setTo(Vector_1.Vector.origin);\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector_1.Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\nexports.AbsorberInstance = AbsorberInstance;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}