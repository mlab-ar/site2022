{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OutOfCanvasUpdater = void 0;\n\nconst Utils_1 = require(\"./Utils\");\n\nconst Utils_2 = require(\"../../Utils/Utils\");\n\nclass OutOfCanvasUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init() {}\n\n  isEnabled(particle) {\n    return !particle.destroyed && !particle.spawning;\n  }\n\n  update(particle, delta) {\n    var _a, _b, _c, _d;\n\n    const outModes = particle.options.move.outModes;\n    this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n    this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n    this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n    this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n  }\n\n  updateOutMode(particle, delta, outMode, direction) {\n    switch (outMode) {\n      case \"bounce\":\n      case \"bounce-vertical\":\n      case \"bounce-horizontal\":\n      case \"bounceVertical\":\n      case \"bounceHorizontal\":\n      case \"split\":\n        this.bounce(particle, delta, direction, outMode);\n        break;\n\n      case \"destroy\":\n        this.destroy(particle, direction);\n        break;\n\n      case \"out\":\n        this.out(particle, direction);\n        break;\n\n      case \"none\":\n      default:\n        this.none(particle, direction);\n        break;\n    }\n  }\n\n  destroy(particle, direction) {\n    const container = this.container;\n\n    if ((0, Utils_2.isPointInside)(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n      return;\n    }\n\n    container.particles.remove(particle, undefined, true);\n  }\n\n  out(particle, direction) {\n    const container = this.container;\n\n    if ((0, Utils_2.isPointInside)(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n      return;\n    }\n\n    const wrap = particle.options.move.warp,\n          canvasSize = container.canvas.size,\n          newPos = {\n      bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n      left: -particle.getRadius() - particle.offset.x,\n      right: canvasSize.width + particle.getRadius() + particle.offset.x,\n      top: -particle.getRadius() - particle.offset.y\n    },\n          sizeValue = particle.getRadius(),\n          nextBounds = (0, Utils_2.calculateBounds)(particle.position, sizeValue);\n\n    if (direction === \"right\" && nextBounds.left > canvasSize.width + particle.offset.x) {\n      particle.position.x = newPos.left;\n      particle.initialPosition.x = particle.position.x;\n\n      if (!wrap) {\n        particle.position.y = Math.random() * canvasSize.height;\n        particle.initialPosition.y = particle.position.y;\n      }\n    } else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n      particle.position.x = newPos.right;\n      particle.initialPosition.x = particle.position.x;\n\n      if (!wrap) {\n        particle.position.y = Math.random() * canvasSize.height;\n        particle.initialPosition.y = particle.position.y;\n      }\n    }\n\n    if (direction === \"bottom\" && nextBounds.top > canvasSize.height + particle.offset.y) {\n      if (!wrap) {\n        particle.position.x = Math.random() * canvasSize.width;\n        particle.initialPosition.x = particle.position.x;\n      }\n\n      particle.position.y = newPos.top;\n      particle.initialPosition.y = particle.position.y;\n    } else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n      if (!wrap) {\n        particle.position.x = Math.random() * canvasSize.width;\n        particle.initialPosition.x = particle.position.x;\n      }\n\n      particle.position.y = newPos.bottom;\n      particle.initialPosition.y = particle.position.y;\n    }\n  }\n\n  bounce(particle, delta, direction, outMode) {\n    const container = this.container;\n    let handled = false;\n\n    for (const [, plugin] of container.plugins) {\n      if (plugin.particleBounce !== undefined) {\n        handled = plugin.particleBounce(particle, delta, direction);\n      }\n\n      if (handled) {\n        break;\n      }\n    }\n\n    if (handled) {\n      return;\n    }\n\n    const pos = particle.getPosition(),\n          offset = particle.offset,\n          size = particle.getRadius(),\n          bounds = (0, Utils_2.calculateBounds)(pos, size),\n          canvasSize = container.canvas.size;\n    (0, Utils_1.bounceHorizontal)({\n      particle,\n      outMode,\n      direction,\n      bounds,\n      canvasSize,\n      offset,\n      size\n    });\n    (0, Utils_1.bounceVertical)({\n      particle,\n      outMode,\n      direction,\n      bounds,\n      canvasSize,\n      offset,\n      size\n    });\n  }\n\n  none(particle, direction) {\n    if (particle.options.move.distance.horizontal && (direction === \"left\" || direction === \"right\") || particle.options.move.distance.vertical && (direction === \"top\" || direction === \"bottom\")) {\n      return;\n    }\n\n    const gravityOptions = particle.options.move.gravity,\n          container = this.container;\n    const canvasSize = container.canvas.size;\n    const pRadius = particle.getRadius();\n\n    if (!gravityOptions.enable) {\n      if (particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius || particle.velocity.y < 0 && particle.position.y >= -pRadius || particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius || particle.velocity.x < 0 && particle.position.x >= -pRadius) {\n        return;\n      }\n\n      if (!(0, Utils_2.isPointInside)(particle.position, container.canvas.size, pRadius, direction)) {\n        container.particles.remove(particle);\n      }\n    } else {\n      const position = particle.position;\n\n      if (!gravityOptions.inverse && position.y > canvasSize.height + pRadius && direction === \"bottom\" || gravityOptions.inverse && position.y < -pRadius && direction === \"top\") {\n        container.particles.remove(particle);\n      }\n    }\n  }\n\n}\n\nexports.OutOfCanvasUpdater = OutOfCanvasUpdater;","map":{"version":3,"names":["Object","defineProperty","exports","value","OutOfCanvasUpdater","Utils_1","require","Utils_2","constructor","container","init","isEnabled","particle","destroyed","spawning","update","delta","_a","_b","_c","_d","outModes","options","move","updateOutMode","bottom","default","left","right","top","outMode","direction","bounce","destroy","out","none","isPointInside","position","canvas","size","getRadius","particles","remove","undefined","wrap","warp","canvasSize","newPos","height","offset","y","x","width","sizeValue","nextBounds","calculateBounds","initialPosition","Math","random","handled","plugin","plugins","particleBounce","pos","getPosition","bounds","bounceHorizontal","bounceVertical","distance","horizontal","vertical","gravityOptions","gravity","pRadius","enable","velocity","inverse"],"sources":["/media/beni/Work3/git/github/site2022/node_modules/tsparticles/cjs/Updaters/OutModes/OutOfCanvasUpdater.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OutOfCanvasUpdater = void 0;\nconst Utils_1 = require(\"./Utils\");\nconst Utils_2 = require(\"../../Utils/Utils\");\nclass OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        var _a, _b, _c, _d;\n        const outModes = particle.options.move.outModes;\n        this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n        this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n        this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n        this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n    }\n    updateOutMode(particle, delta, outMode, direction) {\n        switch (outMode) {\n            case \"bounce\":\n            case \"bounce-vertical\":\n            case \"bounce-horizontal\":\n            case \"bounceVertical\":\n            case \"bounceHorizontal\":\n            case \"split\":\n                this.bounce(particle, delta, direction, outMode);\n                break;\n            case \"destroy\":\n                this.destroy(particle, direction);\n                break;\n            case \"out\":\n                this.out(particle, direction);\n                break;\n            case \"none\":\n            default:\n                this.none(particle, direction);\n                break;\n        }\n    }\n    destroy(particle, direction) {\n        const container = this.container;\n        if ((0, Utils_2.isPointInside)(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n            return;\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n    out(particle, direction) {\n        const container = this.container;\n        if ((0, Utils_2.isPointInside)(particle.position, container.canvas.size, particle.getRadius(), direction)) {\n            return;\n        }\n        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n            left: -particle.getRadius() - particle.offset.x,\n            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n            top: -particle.getRadius() - particle.offset.y,\n        }, sizeValue = particle.getRadius(), nextBounds = (0, Utils_2.calculateBounds)(particle.position, sizeValue);\n        if (direction === \"right\" && nextBounds.left > canvasSize.width + particle.offset.x) {\n            particle.position.x = newPos.left;\n            particle.initialPosition.x = particle.position.x;\n            if (!wrap) {\n                particle.position.y = Math.random() * canvasSize.height;\n                particle.initialPosition.y = particle.position.y;\n            }\n        }\n        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n            particle.position.x = newPos.right;\n            particle.initialPosition.x = particle.position.x;\n            if (!wrap) {\n                particle.position.y = Math.random() * canvasSize.height;\n                particle.initialPosition.y = particle.position.y;\n            }\n        }\n        if (direction === \"bottom\" && nextBounds.top > canvasSize.height + particle.offset.y) {\n            if (!wrap) {\n                particle.position.x = Math.random() * canvasSize.width;\n                particle.initialPosition.x = particle.position.x;\n            }\n            particle.position.y = newPos.top;\n            particle.initialPosition.y = particle.position.y;\n        }\n        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n            if (!wrap) {\n                particle.position.x = Math.random() * canvasSize.width;\n                particle.initialPosition.x = particle.position.x;\n            }\n            particle.position.y = newPos.bottom;\n            particle.initialPosition.y = particle.position.y;\n        }\n    }\n    bounce(particle, delta, direction, outMode) {\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = (0, Utils_2.calculateBounds)(pos, size), canvasSize = container.canvas.size;\n        (0, Utils_1.bounceHorizontal)({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        (0, Utils_1.bounceVertical)({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n    none(particle, direction) {\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!(0, Utils_2.isPointInside)(particle.position, container.canvas.size, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\nexports.OutOfCanvasUpdater = OutOfCanvasUpdater;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}