{"ast":null,"code":"var _jsxFileName = \"/media/beni/Work3/git/github/site2022/src/components/DrawSvg.js\",\n    _s = $RefreshSig$();\n\nimport gsap from 'gsap';\nimport ScrollTrigger from 'gsap/ScrollTrigger';\nimport React, { useLayoutEffect, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport Vector from '../Icons/Vector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VectorContainer = styled.div`\nposition: absolute;\ntop: 0.5rem;\nleft: 50%;\ntransform: translateX(-50%);\nwidth: 100%;\nheight: 100%;\noverflow: hidden;\n\nsvg {\n    width: 100%;\n    height: 100%;\n}\n\n@media (max-width: 48em) {\n    left: 1rem;\n}\n`;\n_c = VectorContainer;\nconst Bounce = keyframes`\nfrom { transform: translateX(-50%) scale(0.5)}\nto { transform: translateX(-50%) scale(1)}\n`;\nconst Ball = styled.div`\nposition: absolute;\ntop: 0;\nleft: 50%;\ntransform: translateX(-50%);\nwidth: 1.5rem;\nheight: 1.5rem;\nborder-radius: 50%;\nbackground-color: ${props => props.theme.body};\nanimation: ${Bounce} 0.5s linear infinite alternate;\n\n@media (max-width: 48em) {\n    left: 1rem;\n}\n`;\n_c2 = Ball;\n\nconst DrawSvg = () => {\n  _s();\n\n  const ref = useRef(null);\n  const ballRef = useRef(null);\n  gsap.registerPlugin(ScrollTrigger);\n  useLayoutEffect(() => {\n    let element = ref.current;\n    let svg = document.getElementsByClassName(\"svg-path\")[0];\n    const length = svg.getTotalLength(); // start positioning svg drawing\n\n    svg.style.strokeDasharray = length; // hide svg before scrolling start\n\n    svg.style.strokeDashoffset = length;\n    let t1 = gsap.timeline({\n      scrollTrigger: {\n        trigger: element,\n        start: \"top center\",\n        end: \"bottom bottom\",\n        onUpdate: self => {\n          const draw = length * self.progress; // also reverse the drawing when scroll\n\n          svg.style.strokeDashoffset = length - draw;\n        },\n        onToggle: self => {\n          if (self.isActive) {\n            ballRef.current.style.display = 'none';\n          } else {\n            ballRef.current.style.display = 'inline-block';\n          }\n        }\n      }\n    });\n    return () => {\n      if (t1) t1.kill();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Ball, {\n      ref: ballRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VectorContainer, {\n      ref: ref,\n      children: /*#__PURE__*/_jsxDEV(Vector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DrawSvg, \"WK29fPyOl6RxwVoGkVVjQjAGTP8=\");\n\n_c3 = DrawSvg;\nexport default DrawSvg;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"VectorContainer\");\n$RefreshReg$(_c2, \"Ball\");\n$RefreshReg$(_c3, \"DrawSvg\");","map":{"version":3,"names":["gsap","ScrollTrigger","React","useLayoutEffect","useRef","styled","keyframes","Vector","VectorContainer","div","Bounce","Ball","props","theme","body","DrawSvg","ref","ballRef","registerPlugin","element","current","svg","document","getElementsByClassName","length","getTotalLength","style","strokeDasharray","strokeDashoffset","t1","timeline","scrollTrigger","trigger","start","end","onUpdate","self","draw","progress","onToggle","isActive","display","kill"],"sources":["/media/beni/Work3/git/github/site2022/src/components/DrawSvg.js"],"sourcesContent":["import gsap from 'gsap'\nimport ScrollTrigger from 'gsap/ScrollTrigger'\nimport React, { useLayoutEffect, useRef } from 'react'\nimport styled, { keyframes }  from 'styled-components'\nimport Vector from '../Icons/Vector'\n\nconst VectorContainer = styled.div`\nposition: absolute;\ntop: 0.5rem;\nleft: 50%;\ntransform: translateX(-50%);\nwidth: 100%;\nheight: 100%;\noverflow: hidden;\n\nsvg {\n    width: 100%;\n    height: 100%;\n}\n\n@media (max-width: 48em) {\n    left: 1rem;\n}\n`\n\nconst Bounce = keyframes`\nfrom { transform: translateX(-50%) scale(0.5)}\nto { transform: translateX(-50%) scale(1)}\n`\n\nconst Ball = styled.div`\nposition: absolute;\ntop: 0;\nleft: 50%;\ntransform: translateX(-50%);\nwidth: 1.5rem;\nheight: 1.5rem;\nborder-radius: 50%;\nbackground-color: ${props => props.theme.body};\nanimation: ${Bounce} 0.5s linear infinite alternate;\n\n@media (max-width: 48em) {\n    left: 1rem;\n}\n`\n\nconst DrawSvg = () => {\n\n    const ref = useRef(null);\n    const ballRef = useRef(null);\n\n    gsap.registerPlugin(ScrollTrigger)\n    useLayoutEffect(() => {\n        let element = ref.current;\n        let svg = document.getElementsByClassName(\"svg-path\")[0]\n        const length = svg.getTotalLength()\n        \n        \n        // start positioning svg drawing\n        svg.style.strokeDasharray = length\n\n        // hide svg before scrolling start\n        svg.style.strokeDashoffset = length\n\n        let t1 = gsap.timeline({\n            scrollTrigger: {\n                trigger: element,\n                start: \"top center\",\n                end: \"bottom bottom\",\n                onUpdate: (self) => {\n                    const draw = length * self.progress\n\n                    // also reverse the drawing when scroll\n                    svg.style.strokeDashoffset = length - draw\n                },\n                onToggle: self => {\n                    if (self.isActive) {\n                        ballRef.current.style.display = 'none'\n                    } else {\n                        ballRef.current.style.display = 'inline-block'\n                    }\n                }\n            }\n        })\n\n        return () => {\n            if (t1) t1.kill()\n        };\n    }, [])\n\n    return (\n        <>\n        <Ball ref={ballRef} />\n        <VectorContainer ref={ref}>\n            <Vector />\n        </VectorContainer>\n        </>\n    )\n}\n\nexport default DrawSvg"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,KAAP,IAAgBC,eAAhB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAmC,mBAAnC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;;AAEA,MAAMC,eAAe,GAAGH,MAAM,CAACI,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;KAAMD,e;AAmBN,MAAME,MAAM,GAAGJ,SAAU;AACzB;AACA;AACA,CAHA;AAKA,MAAMK,IAAI,GAAGN,MAAM,CAACI,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoBG,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,IAAK;AAC9C,aAAaJ,MAAO;AACpB;AACA;AACA;AACA;AACA,CAdA;MAAMC,I;;AAgBN,MAAMI,OAAO,GAAG,MAAM;EAAA;;EAElB,MAAMC,GAAG,GAAGZ,MAAM,CAAC,IAAD,CAAlB;EACA,MAAMa,OAAO,GAAGb,MAAM,CAAC,IAAD,CAAtB;EAEAJ,IAAI,CAACkB,cAAL,CAAoBjB,aAApB;EACAE,eAAe,CAAC,MAAM;IAClB,IAAIgB,OAAO,GAAGH,GAAG,CAACI,OAAlB;IACA,IAAIC,GAAG,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,UAAhC,EAA4C,CAA5C,CAAV;IACA,MAAMC,MAAM,GAAGH,GAAG,CAACI,cAAJ,EAAf,CAHkB,CAMlB;;IACAJ,GAAG,CAACK,KAAJ,CAAUC,eAAV,GAA4BH,MAA5B,CAPkB,CASlB;;IACAH,GAAG,CAACK,KAAJ,CAAUE,gBAAV,GAA6BJ,MAA7B;IAEA,IAAIK,EAAE,GAAG7B,IAAI,CAAC8B,QAAL,CAAc;MACnBC,aAAa,EAAE;QACXC,OAAO,EAAEb,OADE;QAEXc,KAAK,EAAE,YAFI;QAGXC,GAAG,EAAE,eAHM;QAIXC,QAAQ,EAAGC,IAAD,IAAU;UAChB,MAAMC,IAAI,GAAGb,MAAM,GAAGY,IAAI,CAACE,QAA3B,CADgB,CAGhB;;UACAjB,GAAG,CAACK,KAAJ,CAAUE,gBAAV,GAA6BJ,MAAM,GAAGa,IAAtC;QACH,CATU;QAUXE,QAAQ,EAAEH,IAAI,IAAI;UACd,IAAIA,IAAI,CAACI,QAAT,EAAmB;YACfvB,OAAO,CAACG,OAAR,CAAgBM,KAAhB,CAAsBe,OAAtB,GAAgC,MAAhC;UACH,CAFD,MAEO;YACHxB,OAAO,CAACG,OAAR,CAAgBM,KAAhB,CAAsBe,OAAtB,GAAgC,cAAhC;UACH;QACJ;MAhBU;IADI,CAAd,CAAT;IAqBA,OAAO,MAAM;MACT,IAAIZ,EAAJ,EAAQA,EAAE,CAACa,IAAH;IACX,CAFD;EAGH,CApCc,EAoCZ,EApCY,CAAf;EAsCA,oBACI;IAAA,wBACA,QAAC,IAAD;MAAM,GAAG,EAAEzB;IAAX;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,eAAD;MAAiB,GAAG,EAAED,GAAtB;MAAA,uBACI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA,gBADJ;AAQH,CApDD;;GAAMD,O;;MAAAA,O;AAsDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}