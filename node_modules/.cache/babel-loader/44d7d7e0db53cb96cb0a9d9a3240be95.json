{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.alterHsl = exports.drawEllipse = exports.drawParticlePlugin = exports.drawPlugin = exports.drawShapeAfterEffect = exports.drawShape = exports.drawParticle = exports.drawGrabLine = exports.gradient = exports.drawConnectLine = exports.drawLinkTriangle = exports.drawLinkLine = exports.clear = exports.paintBase = void 0;\n\nconst ColorUtils_1 = require(\"./ColorUtils\");\n\nconst NumberUtils_1 = require(\"./NumberUtils\");\n\nfunction drawLine(context, begin, end) {\n  context.beginPath();\n  context.moveTo(begin.x, begin.y);\n  context.lineTo(end.x, end.y);\n  context.closePath();\n}\n\nfunction drawTriangle(context, p1, p2, p3) {\n  context.beginPath();\n  context.moveTo(p1.x, p1.y);\n  context.lineTo(p2.x, p2.y);\n  context.lineTo(p3.x, p3.y);\n  context.closePath();\n}\n\nfunction paintBase(context, dimension, baseColor) {\n  context.save();\n  context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n  context.fillRect(0, 0, dimension.width, dimension.height);\n  context.restore();\n}\n\nexports.paintBase = paintBase;\n\nfunction clear(context, dimension) {\n  context.clearRect(0, 0, dimension.width, dimension.height);\n}\n\nexports.clear = clear;\n\nfunction drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n  let drawn = false;\n\n  if ((0, NumberUtils_1.getDistance)(begin, end) <= maxDistance) {\n    drawLine(context, begin, end);\n    drawn = true;\n  } else if (warp) {\n    let pi1, pi2;\n    const endNE = {\n      x: end.x - canvasSize.width,\n      y: end.y\n    },\n          d1 = (0, NumberUtils_1.getDistances)(begin, endNE);\n\n    if (d1.distance <= maxDistance) {\n      const yi = begin.y - d1.dy / d1.dx * begin.x;\n      pi1 = {\n        x: 0,\n        y: yi\n      };\n      pi2 = {\n        x: canvasSize.width,\n        y: yi\n      };\n    } else {\n      const endSW = {\n        x: end.x,\n        y: end.y - canvasSize.height\n      },\n            d2 = (0, NumberUtils_1.getDistances)(begin, endSW);\n\n      if (d2.distance <= maxDistance) {\n        const yi = begin.y - d2.dy / d2.dx * begin.x,\n              xi = -yi / (d2.dy / d2.dx);\n        pi1 = {\n          x: xi,\n          y: 0\n        };\n        pi2 = {\n          x: xi,\n          y: canvasSize.height\n        };\n      } else {\n        const endSE = {\n          x: end.x - canvasSize.width,\n          y: end.y - canvasSize.height\n        },\n              d3 = (0, NumberUtils_1.getDistances)(begin, endSE);\n\n        if (d3.distance <= maxDistance) {\n          const yi = begin.y - d3.dy / d3.dx * begin.x,\n                xi = -yi / (d3.dy / d3.dx);\n          pi1 = {\n            x: xi,\n            y: yi\n          };\n          pi2 = {\n            x: pi1.x + canvasSize.width,\n            y: pi1.y + canvasSize.height\n          };\n        }\n      }\n    }\n\n    if (pi1 && pi2) {\n      drawLine(context, begin, pi1);\n      drawLine(context, end, pi2);\n      drawn = true;\n    }\n  }\n\n  if (!drawn) {\n    return;\n  }\n\n  context.lineWidth = width;\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  context.strokeStyle = (0, ColorUtils_1.getStyleFromRgb)(colorLine, opacity);\n\n  if (shadow.enable) {\n    const shadowColor = (0, ColorUtils_1.colorToRgb)(shadow.color);\n\n    if (shadowColor) {\n      context.shadowBlur = shadow.blur;\n      context.shadowColor = (0, ColorUtils_1.getStyleFromRgb)(shadowColor);\n    }\n  }\n\n  context.stroke();\n}\n\nexports.drawLinkLine = drawLinkLine;\n\nfunction drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n  drawTriangle(context, pos1, pos2, pos3);\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  context.fillStyle = (0, ColorUtils_1.getStyleFromRgb)(colorTriangle, opacityTriangle);\n  context.fill();\n}\n\nexports.drawLinkTriangle = drawLinkTriangle;\n\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n  context.save();\n  drawLine(context, begin, end);\n  context.lineWidth = width;\n  context.strokeStyle = lineStyle;\n  context.stroke();\n  context.restore();\n}\n\nexports.drawConnectLine = drawConnectLine;\n\nfunction gradient(context, p1, p2, opacity) {\n  const gradStop = Math.floor(p2.getRadius() / p1.getRadius()),\n        color1 = p1.getFillColor(),\n        color2 = p2.getFillColor();\n\n  if (!color1 || !color2) {\n    return;\n  }\n\n  const sourcePos = p1.getPosition(),\n        destPos = p2.getPosition(),\n        midRgb = (0, ColorUtils_1.colorMix)(color1, color2, p1.getRadius(), p2.getRadius()),\n        grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n  grad.addColorStop(0, (0, ColorUtils_1.getStyleFromHsl)(color1, opacity));\n  grad.addColorStop(gradStop > 1 ? 1 : gradStop, (0, ColorUtils_1.getStyleFromRgb)(midRgb, opacity));\n  grad.addColorStop(1, (0, ColorUtils_1.getStyleFromHsl)(color2, opacity));\n  return grad;\n}\n\nexports.gradient = gradient;\n\nfunction drawGrabLine(context, width, begin, end, colorLine, opacity) {\n  context.save();\n  drawLine(context, begin, end);\n  context.strokeStyle = (0, ColorUtils_1.getStyleFromRgb)(colorLine, opacity);\n  context.lineWidth = width;\n  context.stroke();\n  context.restore();\n}\n\nexports.drawGrabLine = drawGrabLine;\n\nfunction drawParticle(container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow) {\n  var _a, _b, _c, _d;\n\n  const pos = particle.getPosition(),\n        tiltOptions = particle.options.tilt,\n        rollOptions = particle.options.roll;\n  context.save();\n\n  if (tiltOptions.enable || rollOptions.enable) {\n    const roll = rollOptions.enable && particle.roll,\n          tilt = tiltOptions.enable && particle.tilt,\n          rollHorizontal = roll && (rollOptions.mode === \"horizontal\" || rollOptions.mode === \"both\"),\n          rollVertical = roll && (rollOptions.mode === \"vertical\" || rollOptions.mode === \"both\");\n    context.setTransform(rollHorizontal ? Math.cos(particle.roll.angle) : 1, tilt ? Math.cos(particle.tilt.value) * particle.tilt.cosDirection : 0, tilt ? Math.sin(particle.tilt.value) * particle.tilt.sinDirection : 0, rollVertical ? Math.sin(particle.roll.angle) : 1, pos.x, pos.y);\n  } else {\n    context.translate(pos.x, pos.y);\n  }\n\n  context.beginPath();\n  const angle = ((_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0) + (particle.options.rotate.path ? particle.velocity.angle : 0);\n\n  if (angle !== 0) {\n    context.rotate(angle);\n  }\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  const shadowColor = particle.shadowColor;\n\n  if (shadow.enable && shadowColor) {\n    context.shadowBlur = shadow.blur;\n    context.shadowColor = (0, ColorUtils_1.getStyleFromRgb)(shadowColor);\n    context.shadowOffsetX = shadow.offset.x;\n    context.shadowOffsetY = shadow.offset.y;\n  }\n\n  if (colorStyles.fill) {\n    context.fillStyle = colorStyles.fill;\n  }\n\n  const stroke = particle.stroke;\n  context.lineWidth = (_c = particle.strokeWidth) !== null && _c !== void 0 ? _c : 0;\n\n  if (colorStyles.stroke) {\n    context.strokeStyle = colorStyles.stroke;\n  }\n\n  drawShape(container, context, particle, radius, opacity, delta);\n\n  if (((_d = stroke === null || stroke === void 0 ? void 0 : stroke.width) !== null && _d !== void 0 ? _d : 0) > 0) {\n    context.stroke();\n  }\n\n  if (particle.close) {\n    context.closePath();\n  }\n\n  if (particle.fill) {\n    context.fill();\n  }\n\n  context.restore();\n  context.save();\n\n  if (tiltOptions.enable && particle.tilt) {\n    context.setTransform(1, Math.cos(particle.tilt.value) * particle.tilt.cosDirection, Math.sin(particle.tilt.value) * particle.tilt.sinDirection, 1, pos.x, pos.y);\n  } else {\n    context.translate(pos.x, pos.y);\n  }\n\n  if (angle !== 0) {\n    context.rotate(angle);\n  }\n\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n\n  drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n  context.restore();\n}\n\nexports.drawParticle = drawParticle;\n\nfunction drawShape(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n\n  const drawer = container.drawers.get(particle.shape);\n\n  if (!drawer) {\n    return;\n  }\n\n  drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\n\nexports.drawShape = drawShape;\n\nfunction drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n  if (!particle.shape) {\n    return;\n  }\n\n  const drawer = container.drawers.get(particle.shape);\n\n  if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n    return;\n  }\n\n  drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\n\nexports.drawShapeAfterEffect = drawShapeAfterEffect;\n\nfunction drawPlugin(context, plugin, delta) {\n  if (!plugin.draw) {\n    return;\n  }\n\n  context.save();\n  plugin.draw(context, delta);\n  context.restore();\n}\n\nexports.drawPlugin = drawPlugin;\n\nfunction drawParticlePlugin(context, plugin, particle, delta) {\n  if (!plugin.drawParticle) {\n    return;\n  }\n\n  context.save();\n  plugin.drawParticle(context, particle, delta);\n  context.restore();\n}\n\nexports.drawParticlePlugin = drawParticlePlugin;\n\nfunction drawEllipse(context, particle, fillColorValue, radius, opacity, width, rotation, start, end) {\n  if (width <= 0) {\n    return;\n  }\n\n  const pos = particle.getPosition();\n\n  if (fillColorValue) {\n    context.strokeStyle = (0, ColorUtils_1.getStyleFromHsl)(fillColorValue, opacity);\n  }\n\n  context.lineWidth = width;\n  const rotationRadian = rotation * Math.PI / 180;\n  context.beginPath();\n  context.ellipse(pos.x, pos.y, radius / 2, radius * 2, rotationRadian, start, end);\n  context.stroke();\n}\n\nexports.drawEllipse = drawEllipse;\n\nfunction alterHsl(color, type, value) {\n  return {\n    h: color.h,\n    s: color.s,\n    l: color.l + (type === \"darken\" ? -1 : 1) * value\n  };\n}\n\nexports.alterHsl = alterHsl;","map":{"version":3,"names":["Object","defineProperty","exports","value","alterHsl","drawEllipse","drawParticlePlugin","drawPlugin","drawShapeAfterEffect","drawShape","drawParticle","drawGrabLine","gradient","drawConnectLine","drawLinkTriangle","drawLinkLine","clear","paintBase","ColorUtils_1","require","NumberUtils_1","drawLine","context","begin","end","beginPath","moveTo","x","y","lineTo","closePath","drawTriangle","p1","p2","p3","dimension","baseColor","save","fillStyle","fillRect","width","height","restore","clearRect","maxDistance","canvasSize","warp","backgroundMask","composite","colorLine","opacity","shadow","drawn","getDistance","pi1","pi2","endNE","d1","getDistances","distance","yi","dy","dx","endSW","d2","xi","endSE","d3","lineWidth","globalCompositeOperation","strokeStyle","getStyleFromRgb","enable","shadowColor","colorToRgb","color","shadowBlur","blur","stroke","pos1","pos2","pos3","colorTriangle","opacityTriangle","fill","lineStyle","gradStop","Math","floor","getRadius","color1","getFillColor","color2","sourcePos","getPosition","destPos","midRgb","colorMix","grad","createLinearGradient","addColorStop","getStyleFromHsl","container","particle","delta","colorStyles","radius","_a","_b","_c","_d","pos","tiltOptions","options","tilt","rollOptions","roll","rollHorizontal","mode","rollVertical","setTransform","cos","angle","cosDirection","sin","sinDirection","translate","rotate","path","velocity","shadowOffsetX","offset","shadowOffsetY","strokeWidth","close","shape","drawer","drawers","get","draw","retina","pixelRatio","afterEffect","plugin","fillColorValue","rotation","start","rotationRadian","PI","ellipse","type","h","s","l"],"sources":["/media/beni/Work3/git/github/site2022/node_modules/tsparticles/cjs/Utils/CanvasUtils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.alterHsl = exports.drawEllipse = exports.drawParticlePlugin = exports.drawPlugin = exports.drawShapeAfterEffect = exports.drawShape = exports.drawParticle = exports.drawGrabLine = exports.gradient = exports.drawConnectLine = exports.drawLinkTriangle = exports.drawLinkLine = exports.clear = exports.paintBase = void 0;\nconst ColorUtils_1 = require(\"./ColorUtils\");\nconst NumberUtils_1 = require(\"./NumberUtils\");\nfunction drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nfunction drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nfunction paintBase(context, dimension, baseColor) {\n    context.save();\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n    context.restore();\n}\nexports.paintBase = paintBase;\nfunction clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexports.clear = clear;\nfunction drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n    let drawn = false;\n    if ((0, NumberUtils_1.getDistance)(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (warp) {\n        let pi1, pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        }, d1 = (0, NumberUtils_1.getDistances)(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            }, d2 = (0, NumberUtils_1.getDistances)(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x, xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                }, d3 = (0, NumberUtils_1.getDistances)(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x, xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.strokeStyle = (0, ColorUtils_1.getStyleFromRgb)(colorLine, opacity);\n    if (shadow.enable) {\n        const shadowColor = (0, ColorUtils_1.colorToRgb)(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = (0, ColorUtils_1.getStyleFromRgb)(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexports.drawLinkLine = drawLinkLine;\nfunction drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.fillStyle = (0, ColorUtils_1.getStyleFromRgb)(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexports.drawLinkTriangle = drawLinkTriangle;\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n    context.save();\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n    context.restore();\n}\nexports.drawConnectLine = drawConnectLine;\nfunction gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = (0, ColorUtils_1.colorMix)(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, (0, ColorUtils_1.getStyleFromHsl)(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, (0, ColorUtils_1.getStyleFromRgb)(midRgb, opacity));\n    grad.addColorStop(1, (0, ColorUtils_1.getStyleFromHsl)(color2, opacity));\n    return grad;\n}\nexports.gradient = gradient;\nfunction drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    context.save();\n    drawLine(context, begin, end);\n    context.strokeStyle = (0, ColorUtils_1.getStyleFromRgb)(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n    context.restore();\n}\nexports.drawGrabLine = drawGrabLine;\nfunction drawParticle(container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow) {\n    var _a, _b, _c, _d;\n    const pos = particle.getPosition(), tiltOptions = particle.options.tilt, rollOptions = particle.options.roll;\n    context.save();\n    if (tiltOptions.enable || rollOptions.enable) {\n        const roll = rollOptions.enable && particle.roll, tilt = tiltOptions.enable && particle.tilt, rollHorizontal = roll && (rollOptions.mode === \"horizontal\" || rollOptions.mode === \"both\"), rollVertical = roll && (rollOptions.mode === \"vertical\" || rollOptions.mode === \"both\");\n        context.setTransform(rollHorizontal ? Math.cos(particle.roll.angle) : 1, tilt ? Math.cos(particle.tilt.value) * particle.tilt.cosDirection : 0, tilt ? Math.sin(particle.tilt.value) * particle.tilt.sinDirection : 0, rollVertical ? Math.sin(particle.roll.angle) : 1, pos.x, pos.y);\n    }\n    else {\n        context.translate(pos.x, pos.y);\n    }\n    context.beginPath();\n    const angle = ((_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0) + (particle.options.rotate.path ? particle.velocity.angle : 0);\n    if (angle !== 0) {\n        context.rotate(angle);\n    }\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = (0, ColorUtils_1.getStyleFromRgb)(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const stroke = particle.stroke;\n    context.lineWidth = (_c = particle.strokeWidth) !== null && _c !== void 0 ? _c : 0;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (((_d = stroke === null || stroke === void 0 ? void 0 : stroke.width) !== null && _d !== void 0 ? _d : 0) > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    context.restore();\n    context.save();\n    if (tiltOptions.enable && particle.tilt) {\n        context.setTransform(1, Math.cos(particle.tilt.value) * particle.tilt.cosDirection, Math.sin(particle.tilt.value) * particle.tilt.sinDirection, 1, pos.x, pos.y);\n    }\n    else {\n        context.translate(pos.x, pos.y);\n    }\n    if (angle !== 0) {\n        context.rotate(angle);\n    }\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.restore();\n}\nexports.drawParticle = drawParticle;\nfunction drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexports.drawShape = drawShape;\nfunction drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexports.drawShapeAfterEffect = drawShapeAfterEffect;\nfunction drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    context.save();\n    plugin.draw(context, delta);\n    context.restore();\n}\nexports.drawPlugin = drawPlugin;\nfunction drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    context.save();\n    plugin.drawParticle(context, particle, delta);\n    context.restore();\n}\nexports.drawParticlePlugin = drawParticlePlugin;\nfunction drawEllipse(context, particle, fillColorValue, radius, opacity, width, rotation, start, end) {\n    if (width <= 0) {\n        return;\n    }\n    const pos = particle.getPosition();\n    if (fillColorValue) {\n        context.strokeStyle = (0, ColorUtils_1.getStyleFromHsl)(fillColorValue, opacity);\n    }\n    context.lineWidth = width;\n    const rotationRadian = (rotation * Math.PI) / 180;\n    context.beginPath();\n    context.ellipse(pos.x, pos.y, radius / 2, radius * 2, rotationRadian, start, end);\n    context.stroke();\n}\nexports.drawEllipse = drawEllipse;\nfunction alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\nexports.alterHsl = alterHsl;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}